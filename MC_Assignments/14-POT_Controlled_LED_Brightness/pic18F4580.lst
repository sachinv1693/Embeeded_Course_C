

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Thu Jan 30 17:33:19 2020

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    25  0000                     
    26                           	psect	idataCOMRAM
    27  002CA4                     __pidataCOMRAM:
    28                           	opt stack 0
    29                           
    30                           ;initializer for main@F15950
    31  002CA4  50                 	db	80
    32  002CA5  6F                 	db	111
    33  002CA6  74                 	db	116
    34  002CA7  65                 	db	101
    35  002CA8  6E                 	db	110
    36  002CA9  74                 	db	116
    37  002CAA  69                 	db	105
    38  002CAB  6F                 	db	111
    39  002CAC  6D                 	db	109
    40  002CAD  65                 	db	101
    41  002CAE  74                 	db	116
    42  002CAF  65                 	db	101
    43  002CB0  72                 	db	114
    44  002CB1  00                 	db	0
    45  0000                     _ADCON0	set	4034
    46  0000                     _ADCON0bits	set	4034
    47  0000                     _ADCON1	set	4033
    48  0000                     _ADCON2	set	4032
    49  0000                     _ADRESH	set	4036
    50  0000                     _ADRESL	set	4035
    51  0000                     _PORTBbits	set	3969
    52  0000                     _PORTCbits	set	3970
    53  0000                     _PORTD	set	3971
    54  0000                     _PORTDbits	set	3971
    55  0000                     _TRISC	set	3988
    56  0000                     _TRISD	set	3989
    57  0000                     _TRISDbits	set	3989
    58  0000                     _AN4	set	31749
    59  0000                     _TRISB0	set	31896
    60                           
    61                           ; #config settings
    62                           
    63                           	psect	cinit
    64  002D26                     __pcinit:
    65                           	opt stack 0
    66  002D26                     start_initialization:
    67                           	opt stack 0
    68  002D26                     __initialization:
    69                           	opt stack 0
    70                           
    71                           ; Clear objects allocated to COMRAM (2 bytes)
    72  002D26  6A31               	clrf	(__pbssCOMRAM+1)& (0+255),c
    73  002D28  6A30               	clrf	__pbssCOMRAM& (0+255),c
    74                           
    75                           ; Initialize objects allocated to COMRAM (14 bytes)
    76                           ; load TBLPTR registers with __pidataCOMRAM
    77  002D2A  0EA4               	movlw	low __pidataCOMRAM
    78  002D2C  6EF6               	movwf	tblptrl,c
    79  002D2E  0E2C               	movlw	high __pidataCOMRAM
    80  002D30  6EF7               	movwf	tblptrh,c
    81  002D32  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    82  002D34  6EF8               	movwf	tblptru,c
    83  002D36  EE00  F022         	lfsr	0,__pdataCOMRAM
    84  002D3A  EE10 F00E          	lfsr	1,14
    85  002D3E                     copy_data0:
    86  002D3E  0009               	tblrd		*+
    87  002D40  CFF5 FFEE          	movff	tablat,postinc0
    88  002D44  50E5               	movf	postdec1,w,c
    89  002D46  50E1               	movf	fsr1l,w,c
    90  002D48  E1FA               	bnz	copy_data0
    91  002D4A                     end_of_initialization:
    92                           	opt stack 0
    93  002D4A                     __end_of__initialization:
    94                           	opt stack 0
    95  002D4A  0100               	movlb	0
    96  002D4C  EF1D  F017         	goto	_main	;jump to C main() function
    97                           tblptru	equ	0xFF8
    98                           tblptrh	equ	0xFF7
    99                           tblptrl	equ	0xFF6
   100                           tablat	equ	0xFF5
   101                           postinc0	equ	0xFEE
   102                           postdec1	equ	0xFE5
   103                           fsr1l	equ	0xFE1
   104                           
   105                           	psect	bssCOMRAM
   106  000030                     __pbssCOMRAM:
   107                           	opt stack 0
   108  000030                     software_pwm@prog_cycle:
   109                           	opt stack 0
   110  000030                     	ds	2
   111                           tblptru	equ	0xFF8
   112                           tblptrh	equ	0xFF7
   113                           tblptrl	equ	0xFF6
   114                           tablat	equ	0xFF5
   115                           postinc0	equ	0xFEE
   116                           postdec1	equ	0xFE5
   117                           fsr1l	equ	0xFE1
   118                           
   119                           	psect	dataCOMRAM
   120  000022                     __pdataCOMRAM:
   121                           	opt stack 0
   122  000022                     main@F15950:
   123                           	opt stack 0
   124  000022                     	ds	14
   125                           tblptru	equ	0xFF8
   126                           tblptrh	equ	0xFF7
   127                           tblptrl	equ	0xFF6
   128                           tablat	equ	0xFF5
   129                           postinc0	equ	0xFEE
   130                           postdec1	equ	0xFE5
   131                           fsr1l	equ	0xFE1
   132                           
   133                           	psect	cstackCOMRAM
   134  000001                     __pcstackCOMRAM:
   135                           	opt stack 0
   136  000001                     ?_adc:
   137                           	opt stack 0
   138  000001                     ?___lwdiv:
   139                           	opt stack 0
   140  000001                     ?___lwmod:
   141                           	opt stack 0
   142  000001                     software_pwm@data:
   143                           	opt stack 0
   144  000001                     delay@time:
   145                           	opt stack 0
   146  000001                     ___lwdiv@dividend:
   147                           	opt stack 0
   148  000001                     ___lwmod@dividend:
   149                           	opt stack 0
   150                           
   151                           ; 2 bytes @ 0x0
   152  000001                     	ds	2
   153  000003                     ??_adc:
   154  000003                     ??_software_pwm:
   155  000003                     delay@i:
   156                           	opt stack 0
   157  000003                     ___lwdiv@divisor:
   158                           	opt stack 0
   159  000003                     ___lwmod@divisor:
   160                           	opt stack 0
   161                           
   162                           ; 2 bytes @ 0x2
   163  000003                     	ds	2
   164  000005                     ___lwmod@counter:
   165                           	opt stack 0
   166  000005                     delay@j:
   167                           	opt stack 0
   168  000005                     adc@data:
   169                           	opt stack 0
   170  000005                     ___lwdiv@quotient:
   171                           	opt stack 0
   172                           
   173                           ; 2 bytes @ 0x4
   174  000005                     	ds	2
   175  000007                     write_lcd@mode:
   176                           	opt stack 0
   177  000007                     ___lwdiv@counter:
   178                           	opt stack 0
   179                           
   180                           ; 1 bytes @ 0x6
   181  000007                     	ds	1
   182  000008                     write_lcd@data:
   183                           	opt stack 0
   184                           
   185                           ; 1 bytes @ 0x7
   186  000008                     	ds	1
   187  000009                     puts@ptr:
   188                           	opt stack 0
   189  000009                     itoa_display@data:
   190                           	opt stack 0
   191                           
   192                           ; 2 bytes @ 0x8
   193  000009                     	ds	2
   194  00000B                     puts@location:
   195                           	opt stack 0
   196  00000B                     itoa_display@array:
   197                           	opt stack 0
   198                           
   199                           ; 5 bytes @ 0xA
   200  00000B                     	ds	5
   201  000010                     itoa_display@k:
   202                           	opt stack 0
   203                           
   204                           ; 2 bytes @ 0xF
   205  000010                     	ds	2
   206  000012                     main@message:
   207                           	opt stack 0
   208                           
   209                           ; 14 bytes @ 0x11
   210  000012                     	ds	14
   211  000020                     main@data:
   212                           	opt stack 0
   213                           
   214                           ; 2 bytes @ 0x1F
   215  000020                     	ds	2
   216                           tblptru	equ	0xFF8
   217                           tblptrh	equ	0xFF7
   218                           tblptrl	equ	0xFF6
   219                           tablat	equ	0xFF5
   220                           postinc0	equ	0xFEE
   221                           postdec1	equ	0xFE5
   222                           fsr1l	equ	0xFE1
   223                           
   224 ;;
   225 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   226 ;;
   227 ;; *************** function _main *****************
   228 ;; Defined at:
   229 ;;		line 21 in file "main.c"
   230 ;; Parameters:    Size  Location     Type
   231 ;;		None
   232 ;; Auto vars:     Size  Location     Type
   233 ;;  message        14   17[COMRAM] unsigned char [14]
   234 ;;  data            2   31[COMRAM] unsigned short 
   235 ;; Return value:  Size  Location     Type
   236 ;;                  1    wreg      void 
   237 ;; Registers used:
   238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   239 ;; Tracked objects:
   240 ;;		On entry : 0/0
   241 ;;		On exit  : 0/0
   242 ;;		Unchanged: 0/0
   243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   244 ;;      Params:         0       0       0       0       0       0       0
   245 ;;      Locals:        16       0       0       0       0       0       0
   246 ;;      Temps:          0       0       0       0       0       0       0
   247 ;;      Totals:        16       0       0       0       0       0       0
   248 ;;Total ram usage:       16 bytes
   249 ;; Hardware stack levels required when called:    4
   250 ;; This function calls:
   251 ;;		_adc
   252 ;;		_init_config
   253 ;;		_itoa_display
   254 ;;		_puts
   255 ;;		_software_pwm
   256 ;; This function is called by:
   257 ;;		Startup code after reset
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261                           	psect	text0
   262  002E3A                     __ptext0:
   263                           	opt stack 0
   264  002E3A                     _main:
   265                           	opt stack 27
   266                           
   267                           ;main.c: 23: unsigned short data;
   268                           ;main.c: 24: char message[] = "Potentiometer";
   269                           
   270                           ;incstack = 0
   271  002E3A  EE20  F022         	lfsr	2,main@F15950
   272  002E3E  EE10  F012         	lfsr	1,main@message
   273  002E42  0E0D               	movlw	13
   274  002E44                     u441:
   275  002E44  CFDB FFE3          	movff	plusw2,plusw1
   276  002E48  06E8               	decf	wreg,f,c
   277  002E4A  E2FC               	bc	u441
   278                           
   279                           ;main.c: 26: init_config();
   280  002E4C  EC4C  F016         	call	_init_config	;wreg free
   281                           
   282                           ;main.c: 28: puts(0x80, message);
   283  002E50  0E12               	movlw	low main@message
   284  002E52  6E09               	movwf	puts@ptr,c
   285  002E54  0E00               	movlw	high main@message
   286  002E56  6E0A               	movwf	puts@ptr+1,c
   287  002E58  0E80               	movlw	128
   288  002E5A  ECDE  F016         	call	_puts
   289  002E5E                     l1060:
   290                           
   291                           ;main.c: 31: {
   292                           ;main.c: 33: data = adc();
   293  002E5E  EC70  F016         	call	_adc	;wreg free
   294  002E62  C001  F020         	movff	?_adc,main@data
   295  002E66  C002  F021         	movff	?_adc+1,main@data+1
   296                           
   297                           ;main.c: 35: itoa_display(data);
   298  002E6A  C020  F009         	movff	main@data,itoa_display@data
   299  002E6E  C021  F00A         	movff	main@data+1,itoa_display@data+1
   300  002E72  EC9C  F017         	call	_itoa_display	;wreg free
   301                           
   302                           ;main.c: 37: software_pwm(data);
   303  002E76  C020  F001         	movff	main@data,software_pwm@data
   304  002E7A  C021  F002         	movff	main@data+1,software_pwm@data+1
   305  002E7E  ECC3  F016         	call	_software_pwm	;wreg free
   306  002E82  D7ED               	goto	l1060
   307  002E84                     __end_of_main:
   308                           	opt stack 0
   309                           tblptru	equ	0xFF8
   310                           tblptrh	equ	0xFF7
   311                           tblptrl	equ	0xFF6
   312                           tablat	equ	0xFF5
   313                           postinc0	equ	0xFEE
   314                           wreg	equ	0xFE8
   315                           postdec1	equ	0xFE5
   316                           plusw1	equ	0xFE3
   317                           fsr1l	equ	0xFE1
   318                           plusw2	equ	0xFDB
   319                           
   320 ;; *************** function _software_pwm *****************
   321 ;; Defined at:
   322 ;;		line 10 in file "main.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;  data            2    0[COMRAM] unsigned short 
   325 ;; Auto vars:     Size  Location     Type
   326 ;;		None
   327 ;; Return value:  Size  Location     Type
   328 ;;                  1    wreg      void 
   329 ;; Registers used:
   330 ;;		wreg, status,2, status,0
   331 ;; Tracked objects:
   332 ;;		On entry : 0/0
   333 ;;		On exit  : 0/0
   334 ;;		Unchanged: 0/0
   335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   336 ;;      Params:         2       0       0       0       0       0       0
   337 ;;      Locals:         0       0       0       0       0       0       0
   338 ;;      Temps:          1       0       0       0       0       0       0
   339 ;;      Totals:         3       0       0       0       0       0       0
   340 ;;Total ram usage:        3 bytes
   341 ;; Hardware stack levels used:    1
   342 ;; This function calls:
   343 ;;		Nothing
   344 ;; This function is called by:
   345 ;;		_main
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349                           	psect	text1
   350  002D86                     __ptext1:
   351                           	opt stack 0
   352  002D86                     _software_pwm:
   353                           	opt stack 30
   354                           
   355                           ;main.c: 13: static unsigned short prog_cycle;
   356                           ;main.c: 15: PORTBbits.RB0 = (prog_cycle < data) ? 1 : 0;
   357                           
   358                           ;incstack = 0
   359  002D86  5001               	movf	software_pwm@data,w,c
   360  002D88  5C30               	subwf	software_pwm@prog_cycle,w,c
   361  002D8A  5002               	movf	software_pwm@data+1,w,c
   362  002D8C  5831               	subwfb	software_pwm@prog_cycle+1,w,c
   363  002D8E  B0D8               	btfsc	status,0,c
   364  002D90  D003               	goto	u400
   365  002D92  6A03               	clrf	??_software_pwm& (0+255),c
   366  002D94  2A03               	incf	??_software_pwm& (0+255),f,c
   367  002D96  D001               	goto	u418
   368  002D98                     u400:
   369  002D98  6A03               	clrf	??_software_pwm& (0+255),c
   370  002D9A                     u418:
   371  002D9A  5081               	movf	3969,w,c	;volatile
   372  002D9C  1803               	xorwf	??_software_pwm,w,c
   373  002D9E  0BFE               	andlw	-2
   374  002DA0  1803               	xorwf	??_software_pwm,w,c
   375  002DA2  6E81               	movwf	3969,c	;volatile
   376                           
   377                           ;main.c: 17: if (prog_cycle++ == (unsigned short)10)
   378  002DA4  4A30               	infsnz	software_pwm@prog_cycle,f,c
   379  002DA6  2A31               	incf	software_pwm@prog_cycle+1,f,c
   380  002DA8  0E0B               	movlw	11
   381  002DAA  1830               	xorwf	software_pwm@prog_cycle,w,c
   382  002DAC  1031               	iorwf	software_pwm@prog_cycle+1,w,c
   383  002DAE  A4D8               	btfss	status,2,c
   384  002DB0  0012               	return	
   385                           
   386                           ;main.c: 18: prog_cycle = 0;
   387  002DB2  0E00               	movlw	0
   388  002DB4  6E31               	movwf	software_pwm@prog_cycle+1,c
   389  002DB6  0E00               	movlw	0
   390  002DB8  6E30               	movwf	software_pwm@prog_cycle,c
   391  002DBA  0012               	return	
   392  002DBC                     __end_of_software_pwm:
   393                           	opt stack 0
   394                           tblptru	equ	0xFF8
   395                           tblptrh	equ	0xFF7
   396                           tblptrl	equ	0xFF6
   397                           tablat	equ	0xFF5
   398                           postinc0	equ	0xFEE
   399                           wreg	equ	0xFE8
   400                           postdec1	equ	0xFE5
   401                           plusw1	equ	0xFE3
   402                           fsr1l	equ	0xFE1
   403                           plusw2	equ	0xFDB
   404                           status	equ	0xFD8
   405                           
   406 ;; *************** function _puts *****************
   407 ;; Defined at:
   408 ;;		line 28 in file "clcd.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;  location        1    wreg     unsigned char 
   411 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
   412 ;;		 -> main@message(14), 
   413 ;; Auto vars:     Size  Location     Type
   414 ;;  location        1   10[COMRAM] unsigned char 
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      void 
   417 ;; Registers used:
   418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   424 ;;      Params:         2       0       0       0       0       0       0
   425 ;;      Locals:         1       0       0       0       0       0       0
   426 ;;      Temps:          0       0       0       0       0       0       0
   427 ;;      Totals:         3       0       0       0       0       0       0
   428 ;;Total ram usage:        3 bytes
   429 ;; Hardware stack levels used:    1
   430 ;; Hardware stack levels required when called:    2
   431 ;; This function calls:
   432 ;;		_is_busy
   433 ;;		_write_lcd
   434 ;; This function is called by:
   435 ;;		_main
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           	psect	text2
   440  002DBC                     __ptext2:
   441                           	opt stack 0
   442  002DBC                     _puts:
   443                           	opt stack 28
   444                           
   445                           ;incstack = 0
   446                           ;puts@location stored from wreg
   447  002DBC  6E0B               	movwf	puts@location,c
   448                           
   449                           ;clcd.c: 30: write_lcd(location, 0);
   450  002DBE  0E00               	movlw	0
   451  002DC0  6E07               	movwf	write_lcd@mode,c
   452  002DC2  500B               	movf	puts@location,w,c
   453  002DC4  EC81  F016         	call	_write_lcd
   454                           
   455                           ;clcd.c: 33: is_busy();
   456  002DC8  EC61  F016         	call	_is_busy	;wreg free
   457                           
   458                           ;clcd.c: 35: while (*ptr)
   459  002DCC  D00D               	goto	l998
   460  002DCE                     l992:
   461                           
   462                           ;clcd.c: 36: {
   463                           ;clcd.c: 37: is_busy();
   464  002DCE  EC61  F016         	call	_is_busy	;wreg free
   465                           
   466                           ;clcd.c: 38: write_lcd(*ptr++, 1);
   467  002DD2  0E01               	movlw	1
   468  002DD4  6E07               	movwf	write_lcd@mode,c
   469  002DD6  C009  FFD9         	movff	puts@ptr,fsr2l
   470  002DDA  C00A  FFDA         	movff	puts@ptr+1,fsr2h
   471  002DDE  50DF               	movf	indf2,w,c
   472  002DE0  EC81  F016         	call	_write_lcd
   473  002DE4  4A09               	infsnz	puts@ptr,f,c
   474  002DE6  2A0A               	incf	puts@ptr+1,f,c
   475  002DE8                     l998:
   476  002DE8  C009  FFD9         	movff	puts@ptr,fsr2l
   477  002DEC  C00A  FFDA         	movff	puts@ptr+1,fsr2h
   478  002DF0  50DF               	movf	indf2,w,c
   479  002DF2  B4D8               	btfsc	status,2,c
   480  002DF4  0012               	return	
   481  002DF6  D7EB               	goto	l992
   482  002DF8                     __end_of_puts:
   483                           	opt stack 0
   484                           tblptru	equ	0xFF8
   485                           tblptrh	equ	0xFF7
   486                           tblptrl	equ	0xFF6
   487                           tablat	equ	0xFF5
   488                           postinc0	equ	0xFEE
   489                           wreg	equ	0xFE8
   490                           postdec1	equ	0xFE5
   491                           plusw1	equ	0xFE3
   492                           fsr1l	equ	0xFE1
   493                           indf2	equ	0xFDF
   494                           plusw2	equ	0xFDB
   495                           fsr2h	equ	0xFDA
   496                           fsr2l	equ	0xFD9
   497                           status	equ	0xFD8
   498                           
   499 ;; *************** function _itoa_display *****************
   500 ;; Defined at:
   501 ;;		line 3 in file "itoa_display.c"
   502 ;; Parameters:    Size  Location     Type
   503 ;;  data            2    8[COMRAM] unsigned short 
   504 ;; Auto vars:     Size  Location     Type
   505 ;;  array           5   10[COMRAM] unsigned char [5]
   506 ;;  k               2   15[COMRAM] int 
   507 ;; Return value:  Size  Location     Type
   508 ;;                  1    wreg      void 
   509 ;; Registers used:
   510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   511 ;; Tracked objects:
   512 ;;		On entry : 0/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   516 ;;      Params:         2       0       0       0       0       0       0
   517 ;;      Locals:         7       0       0       0       0       0       0
   518 ;;      Temps:          0       0       0       0       0       0       0
   519 ;;      Totals:         9       0       0       0       0       0       0
   520 ;;Total ram usage:        9 bytes
   521 ;; Hardware stack levels used:    1
   522 ;; Hardware stack levels required when called:    2
   523 ;; This function calls:
   524 ;;		___lwdiv
   525 ;;		___lwmod
   526 ;;		_is_busy
   527 ;;		_write_lcd
   528 ;; This function is called by:
   529 ;;		_main
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           	psect	text3
   534  002F38                     __ptext3:
   535                           	opt stack 0
   536  002F38                     _itoa_display:
   537                           	opt stack 28
   538                           
   539                           ;itoa_display.c: 5: data /= 11;
   540                           
   541                           ;incstack = 0
   542  002F38  C009  F001         	movff	itoa_display@data,___lwdiv@dividend
   543  002F3C  C00A  F002         	movff	itoa_display@data+1,___lwdiv@dividend+1
   544  002F40  0E00               	movlw	0
   545  002F42  6E04               	movwf	___lwdiv@divisor+1,c
   546  002F44  0E0B               	movlw	11
   547  002F46  6E03               	movwf	___lwdiv@divisor,c
   548  002F48  EC42  F017         	call	___lwdiv	;wreg free
   549  002F4C  C001  F009         	movff	?___lwdiv,itoa_display@data
   550  002F50  C002  F00A         	movff	?___lwdiv+1,itoa_display@data+1
   551                           
   552                           ;itoa_display.c: 6: if (data > 90)
   553  002F54  500A               	movf	itoa_display@data+1,w,c
   554  002F56  E104               	bnz	u350
   555  002F58  0E5B               	movlw	91
   556  002F5A  5C09               	subwf	itoa_display@data,w,c
   557  002F5C  A0D8               	btfss	status,0,c
   558  002F5E  D004               	goto	l56
   559  002F60                     u350:
   560                           
   561                           ;itoa_display.c: 7: data = 90;
   562  002F60  0E00               	movlw	0
   563  002F62  6E0A               	movwf	itoa_display@data+1,c
   564  002F64  0E5A               	movlw	90
   565  002F66  6E09               	movwf	itoa_display@data,c
   566  002F68                     l56:
   567                           
   568                           ;itoa_display.c: 8: char array[5];
   569                           ;itoa_display.c: 9: int k;
   570                           ;itoa_display.c: 11: for(k = 0; k <= 3; k++)
   571  002F68  0E00               	movlw	0
   572  002F6A  6E11               	movwf	itoa_display@k+1,c
   573  002F6C  0E00               	movlw	0
   574  002F6E  6E10               	movwf	itoa_display@k,c
   575  002F70                     l1006:
   576  002F70  BE11               	btfsc	itoa_display@k+1,7,c
   577  002F72  D006               	goto	l1010
   578  002F74  5011               	movf	itoa_display@k+1,w,c
   579  002F76  E128               	bnz	l1018
   580  002F78  0E04               	movlw	4
   581  002F7A  5C10               	subwf	itoa_display@k,w,c
   582  002F7C  B0D8               	btfsc	status,0,c
   583  002F7E  D024               	goto	l1018
   584  002F80                     l1010:
   585                           
   586                           ;itoa_display.c: 12: {
   587                           ;itoa_display.c: 14: array[k]= data % 10 + '0';
   588  002F80  0E0B               	movlw	low itoa_display@array
   589  002F82  2410               	addwf	itoa_display@k,w,c
   590  002F84  6ED9               	movwf	fsr2l,c
   591  002F86  0E00               	movlw	high itoa_display@array
   592  002F88  2011               	addwfc	itoa_display@k+1,w,c
   593  002F8A  6EDA               	movwf	fsr2h,c
   594  002F8C  C009  F001         	movff	itoa_display@data,___lwmod@dividend
   595  002F90  C00A  F002         	movff	itoa_display@data+1,___lwmod@dividend+1
   596  002F94  0E00               	movlw	0
   597  002F96  6E04               	movwf	___lwmod@divisor+1,c
   598  002F98  0E0A               	movlw	10
   599  002F9A  6E03               	movwf	___lwmod@divisor,c
   600  002F9C  ECFC  F016         	call	___lwmod	;wreg free
   601  002FA0  5001               	movf	?___lwmod,w,c
   602  002FA2  0F30               	addlw	48
   603  002FA4  6EDF               	movwf	indf2,c
   604                           
   605                           ;itoa_display.c: 15: data = data / 10;
   606  002FA6  C009  F001         	movff	itoa_display@data,___lwdiv@dividend
   607  002FAA  C00A  F002         	movff	itoa_display@data+1,___lwdiv@dividend+1
   608  002FAE  0E00               	movlw	0
   609  002FB0  6E04               	movwf	___lwdiv@divisor+1,c
   610  002FB2  0E0A               	movlw	10
   611  002FB4  6E03               	movwf	___lwdiv@divisor,c
   612  002FB6  EC42  F017         	call	___lwdiv	;wreg free
   613  002FBA  C001  F009         	movff	?___lwdiv,itoa_display@data
   614  002FBE  C002  F00A         	movff	?___lwdiv+1,itoa_display@data+1
   615  002FC2  4A10               	infsnz	itoa_display@k,f,c
   616  002FC4  2A11               	incf	itoa_display@k+1,f,c
   617  002FC6  D7D4               	goto	l1006
   618  002FC8                     l1018:
   619                           
   620                           ;itoa_display.c: 16: }
   621                           ;itoa_display.c: 18: write_lcd(0xC0, 0);
   622  002FC8  0E00               	movlw	0
   623  002FCA  6E07               	movwf	write_lcd@mode,c
   624  002FCC  0EC0               	movlw	192
   625  002FCE  EC81  F016         	call	_write_lcd
   626                           
   627                           ;itoa_display.c: 19: for(k = 1; k >= 0; k--)
   628  002FD2  0E00               	movlw	0
   629  002FD4  6E11               	movwf	itoa_display@k+1,c
   630  002FD6  0E01               	movlw	1
   631  002FD8  6E10               	movwf	itoa_display@k,c
   632  002FDA                     l1022:
   633  002FDA  BE11               	btfsc	itoa_display@k+1,7,c
   634  002FDC  0012               	return	
   635                           
   636                           ;itoa_display.c: 20: {
   637                           ;itoa_display.c: 21: is_busy();
   638  002FDE  EC61  F016         	call	_is_busy	;wreg free
   639                           
   640                           ;itoa_display.c: 24: write_lcd(array[k], 1);
   641  002FE2  0E01               	movlw	1
   642  002FE4  6E07               	movwf	write_lcd@mode,c
   643  002FE6  0E0B               	movlw	low itoa_display@array
   644  002FE8  2410               	addwf	itoa_display@k,w,c
   645  002FEA  6ED9               	movwf	fsr2l,c
   646  002FEC  0E00               	movlw	high itoa_display@array
   647  002FEE  2011               	addwfc	itoa_display@k+1,w,c
   648  002FF0  6EDA               	movwf	fsr2h,c
   649  002FF2  50DF               	movf	indf2,w,c
   650  002FF4  EC81  F016         	call	_write_lcd
   651  002FF8  0610               	decf	itoa_display@k,f,c
   652  002FFA  A0D8               	btfss	status,0,c
   653  002FFC  0611               	decf	itoa_display@k+1,f,c
   654  002FFE  D7ED               	goto	l1022
   655  003000                     __end_of_itoa_display:
   656                           	opt stack 0
   657                           tblptru	equ	0xFF8
   658                           tblptrh	equ	0xFF7
   659                           tblptrl	equ	0xFF6
   660                           tablat	equ	0xFF5
   661                           postinc0	equ	0xFEE
   662                           wreg	equ	0xFE8
   663                           postdec1	equ	0xFE5
   664                           plusw1	equ	0xFE3
   665                           fsr1l	equ	0xFE1
   666                           indf2	equ	0xFDF
   667                           plusw2	equ	0xFDB
   668                           fsr2h	equ	0xFDA
   669                           fsr2l	equ	0xFD9
   670                           status	equ	0xFD8
   671                           
   672 ;; *************** function _is_busy *****************
   673 ;; Defined at:
   674 ;;		line 11 in file "clcd.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;		None
   677 ;; Auto vars:     Size  Location     Type
   678 ;;		None
   679 ;; Return value:  Size  Location     Type
   680 ;;                  1    wreg      void 
   681 ;; Registers used:
   682 ;;		wreg, status,2, status,0, cstack
   683 ;; Tracked objects:
   684 ;;		On entry : 0/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   688 ;;      Params:         0       0       0       0       0       0       0
   689 ;;      Locals:         0       0       0       0       0       0       0
   690 ;;      Temps:          0       0       0       0       0       0       0
   691 ;;      Totals:         0       0       0       0       0       0       0
   692 ;;Total ram usage:        0 bytes
   693 ;; Hardware stack levels used:    1
   694 ;; Hardware stack levels required when called:    1
   695 ;; This function calls:
   696 ;;		_delay
   697 ;; This function is called by:
   698 ;;		_puts
   699 ;;		_itoa_display
   700 ;;		_putchar
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           	psect	text4
   705  002CC2                     __ptext4:
   706                           	opt stack 0
   707  002CC2                     _is_busy:
   708                           	opt stack 28
   709                           
   710                           ;clcd.c: 14: TRISDbits.RD7 = 1;
   711                           
   712                           ;incstack = 0
   713  002CC2  8E95               	bsf	3989,7,c	;volatile
   714                           
   715                           ;clcd.c: 16: PORTCbits.RC1 = 0;
   716  002CC4  9282               	bcf	3970,1,c	;volatile
   717                           
   718                           ;clcd.c: 17: PORTCbits.RC0 = 1;
   719  002CC6  8082               	bsf	3970,0,c	;volatile
   720  002CC8                     l16:
   721                           
   722                           ;clcd.c: 20: {
   723                           ;clcd.c: 21: {PORTCbits.RC2 = 1; delay(1); PORTCbits.RC2 = 0;};
   724  002CC8  8482               	bsf	3970,2,c	;volatile
   725  002CCA  0E00               	movlw	0
   726  002CCC  6E02               	movwf	delay@time+1,c
   727  002CCE  0E01               	movlw	1
   728  002CD0  6E01               	movwf	delay@time,c
   729  002CD2  ECA8  F016         	call	_delay	;wreg free
   730  002CD6  9482               	bcf	3970,2,c	;volatile
   731                           
   732                           ;clcd.c: 22: }while (PORTDbits.RD7);
   733  002CD8  BE83               	btfsc	3971,7,c	;volatile
   734  002CDA  D7F6               	goto	l16
   735                           
   736                           ;clcd.c: 25: TRISDbits.RD7 = 0;
   737  002CDC  9E95               	bcf	3989,7,c	;volatile
   738  002CDE  0012               	return		;funcret
   739  002CE0                     __end_of_is_busy:
   740                           	opt stack 0
   741                           tblptru	equ	0xFF8
   742                           tblptrh	equ	0xFF7
   743                           tblptrl	equ	0xFF6
   744                           tablat	equ	0xFF5
   745                           postinc0	equ	0xFEE
   746                           wreg	equ	0xFE8
   747                           postdec1	equ	0xFE5
   748                           plusw1	equ	0xFE3
   749                           fsr1l	equ	0xFE1
   750                           indf2	equ	0xFDF
   751                           plusw2	equ	0xFDB
   752                           fsr2h	equ	0xFDA
   753                           fsr2l	equ	0xFD9
   754                           status	equ	0xFD8
   755                           
   756 ;; *************** function ___lwmod *****************
   757 ;; Defined at:
   758 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwmod.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;  dividend        2    0[COMRAM] unsigned int 
   761 ;;  divisor         2    2[COMRAM] unsigned int 
   762 ;; Auto vars:     Size  Location     Type
   763 ;;  counter         1    4[COMRAM] unsigned char 
   764 ;; Return value:  Size  Location     Type
   765 ;;                  2    0[COMRAM] unsigned int 
   766 ;; Registers used:
   767 ;;		wreg, status,2, status,0
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   773 ;;      Params:         4       0       0       0       0       0       0
   774 ;;      Locals:         1       0       0       0       0       0       0
   775 ;;      Temps:          0       0       0       0       0       0       0
   776 ;;      Totals:         5       0       0       0       0       0       0
   777 ;;Total ram usage:        5 bytes
   778 ;; Hardware stack levels used:    1
   779 ;; This function calls:
   780 ;;		Nothing
   781 ;; This function is called by:
   782 ;;		_itoa_display
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           	psect	text5
   787  002DF8                     __ptext5:
   788                           	opt stack 0
   789  002DF8                     ___lwmod:
   790                           	opt stack 29
   791                           
   792                           ;incstack = 0
   793  002DF8  5003               	movf	___lwmod@divisor,w,c
   794  002DFA  1004               	iorwf	___lwmod@divisor+1,w,c
   795  002DFC  B4D8               	btfsc	status,2,c
   796  002DFE  D018               	goto	l525
   797  002E00  0E01               	movlw	1
   798  002E02  6E05               	movwf	___lwmod@counter,c
   799  002E04  D004               	goto	l980
   800  002E06                     l978:
   801  002E06  90D8               	bcf	status,0,c
   802  002E08  3603               	rlcf	___lwmod@divisor,f,c
   803  002E0A  3604               	rlcf	___lwmod@divisor+1,f,c
   804  002E0C  2A05               	incf	___lwmod@counter,f,c
   805  002E0E                     l980:
   806  002E0E  AE04               	btfss	___lwmod@divisor+1,7,c
   807  002E10  D7FA               	goto	l978
   808  002E12                     l982:
   809  002E12  5003               	movf	___lwmod@divisor,w,c
   810  002E14  5C01               	subwf	___lwmod@dividend,w,c
   811  002E16  5004               	movf	___lwmod@divisor+1,w,c
   812  002E18  5802               	subwfb	___lwmod@dividend+1,w,c
   813  002E1A  A0D8               	btfss	status,0,c
   814  002E1C  D004               	goto	l986
   815  002E1E  5003               	movf	___lwmod@divisor,w,c
   816  002E20  5E01               	subwf	___lwmod@dividend,f,c
   817  002E22  5004               	movf	___lwmod@divisor+1,w,c
   818  002E24  5A02               	subwfb	___lwmod@dividend+1,f,c
   819  002E26                     l986:
   820  002E26  90D8               	bcf	status,0,c
   821  002E28  3204               	rrcf	___lwmod@divisor+1,f,c
   822  002E2A  3203               	rrcf	___lwmod@divisor,f,c
   823  002E2C  2E05               	decfsz	___lwmod@counter,f,c
   824  002E2E  D7F1               	goto	l982
   825  002E30                     l525:
   826  002E30  C001  F001         	movff	___lwmod@dividend,?___lwmod
   827  002E34  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
   828  002E38  0012               	return		;funcret
   829  002E3A                     __end_of___lwmod:
   830                           	opt stack 0
   831                           tblptru	equ	0xFF8
   832                           tblptrh	equ	0xFF7
   833                           tblptrl	equ	0xFF6
   834                           tablat	equ	0xFF5
   835                           postinc0	equ	0xFEE
   836                           wreg	equ	0xFE8
   837                           postdec1	equ	0xFE5
   838                           plusw1	equ	0xFE3
   839                           fsr1l	equ	0xFE1
   840                           indf2	equ	0xFDF
   841                           plusw2	equ	0xFDB
   842                           fsr2h	equ	0xFDA
   843                           fsr2l	equ	0xFD9
   844                           status	equ	0xFD8
   845                           
   846 ;; *************** function ___lwdiv *****************
   847 ;; Defined at:
   848 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwdiv.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;  dividend        2    0[COMRAM] unsigned int 
   851 ;;  divisor         2    2[COMRAM] unsigned int 
   852 ;; Auto vars:     Size  Location     Type
   853 ;;  quotient        2    4[COMRAM] unsigned int 
   854 ;;  counter         1    6[COMRAM] unsigned char 
   855 ;; Return value:  Size  Location     Type
   856 ;;                  2    0[COMRAM] unsigned int 
   857 ;; Registers used:
   858 ;;		wreg, status,2, status,0
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   864 ;;      Params:         4       0       0       0       0       0       0
   865 ;;      Locals:         3       0       0       0       0       0       0
   866 ;;      Temps:          0       0       0       0       0       0       0
   867 ;;      Totals:         7       0       0       0       0       0       0
   868 ;;Total ram usage:        7 bytes
   869 ;; Hardware stack levels used:    1
   870 ;; This function calls:
   871 ;;		Nothing
   872 ;; This function is called by:
   873 ;;		_itoa_display
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           	psect	text6
   878  002E84                     __ptext6:
   879                           	opt stack 0
   880  002E84                     ___lwdiv:
   881                           	opt stack 29
   882                           
   883                           ;incstack = 0
   884  002E84  0E00               	movlw	0
   885  002E86  6E06               	movwf	___lwdiv@quotient+1,c
   886  002E88  0E00               	movlw	0
   887  002E8A  6E05               	movwf	___lwdiv@quotient,c
   888  002E8C  5003               	movf	___lwdiv@divisor,w,c
   889  002E8E  1004               	iorwf	___lwdiv@divisor+1,w,c
   890  002E90  B4D8               	btfsc	status,2,c
   891  002E92  D01C               	goto	l515
   892  002E94  0E01               	movlw	1
   893  002E96  6E07               	movwf	___lwdiv@counter,c
   894  002E98  D004               	goto	l960
   895  002E9A                     l958:
   896  002E9A  90D8               	bcf	status,0,c
   897  002E9C  3603               	rlcf	___lwdiv@divisor,f,c
   898  002E9E  3604               	rlcf	___lwdiv@divisor+1,f,c
   899  002EA0  2A07               	incf	___lwdiv@counter,f,c
   900  002EA2                     l960:
   901  002EA2  AE04               	btfss	___lwdiv@divisor+1,7,c
   902  002EA4  D7FA               	goto	l958
   903  002EA6                     l962:
   904  002EA6  90D8               	bcf	status,0,c
   905  002EA8  3605               	rlcf	___lwdiv@quotient,f,c
   906  002EAA  3606               	rlcf	___lwdiv@quotient+1,f,c
   907  002EAC  5003               	movf	___lwdiv@divisor,w,c
   908  002EAE  5C01               	subwf	___lwdiv@dividend,w,c
   909  002EB0  5004               	movf	___lwdiv@divisor+1,w,c
   910  002EB2  5802               	subwfb	___lwdiv@dividend+1,w,c
   911  002EB4  A0D8               	btfss	status,0,c
   912  002EB6  D005               	goto	l970
   913  002EB8  5003               	movf	___lwdiv@divisor,w,c
   914  002EBA  5E01               	subwf	___lwdiv@dividend,f,c
   915  002EBC  5004               	movf	___lwdiv@divisor+1,w,c
   916  002EBE  5A02               	subwfb	___lwdiv@dividend+1,f,c
   917  002EC0  8005               	bsf	___lwdiv@quotient,0,c
   918  002EC2                     l970:
   919  002EC2  90D8               	bcf	status,0,c
   920  002EC4  3204               	rrcf	___lwdiv@divisor+1,f,c
   921  002EC6  3203               	rrcf	___lwdiv@divisor,f,c
   922  002EC8  2E07               	decfsz	___lwdiv@counter,f,c
   923  002ECA  D7ED               	goto	l962
   924  002ECC                     l515:
   925  002ECC  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
   926  002ED0  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
   927  002ED4  0012               	return		;funcret
   928  002ED6                     __end_of___lwdiv:
   929                           	opt stack 0
   930                           tblptru	equ	0xFF8
   931                           tblptrh	equ	0xFF7
   932                           tblptrl	equ	0xFF6
   933                           tablat	equ	0xFF5
   934                           postinc0	equ	0xFEE
   935                           wreg	equ	0xFE8
   936                           postdec1	equ	0xFE5
   937                           plusw1	equ	0xFE3
   938                           fsr1l	equ	0xFE1
   939                           indf2	equ	0xFDF
   940                           plusw2	equ	0xFDB
   941                           fsr2h	equ	0xFDA
   942                           fsr2l	equ	0xFD9
   943                           status	equ	0xFD8
   944                           
   945 ;; *************** function _init_config *****************
   946 ;; Defined at:
   947 ;;		line 3 in file "main.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;		None
   950 ;; Auto vars:     Size  Location     Type
   951 ;;		None
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, status,2, status,0, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   961 ;;      Params:         0       0       0       0       0       0       0
   962 ;;      Locals:         0       0       0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0       0       0
   964 ;;      Totals:         0       0       0       0       0       0       0
   965 ;;Total ram usage:        0 bytes
   966 ;; Hardware stack levels used:    1
   967 ;; Hardware stack levels required when called:    3
   968 ;; This function calls:
   969 ;;		_init_ADC_config
   970 ;;		_init_CLCD_config
   971 ;; This function is called by:
   972 ;;		_main
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text7
   977  002C98                     __ptext7:
   978                           	opt stack 0
   979  002C98                     _init_config:
   980                           	opt stack 27
   981                           
   982                           ;main.c: 5: TRISB0 = 0;
   983                           
   984                           ;incstack = 0
   985  002C98  9093               	bcf	3987,0,c	;volatile
   986                           
   987                           ;main.c: 6: init_CLCD_config();
   988  002C9A  EC6B  F017         	call	_init_CLCD_config	;wreg free
   989                           
   990                           ;main.c: 7: init_ADC_config();
   991  002C9E  EC59  F016         	call	_init_ADC_config	;wreg free
   992  002CA2  0012               	return		;funcret
   993  002CA4                     __end_of_init_config:
   994                           	opt stack 0
   995                           tblptru	equ	0xFF8
   996                           tblptrh	equ	0xFF7
   997                           tblptrl	equ	0xFF6
   998                           tablat	equ	0xFF5
   999                           postinc0	equ	0xFEE
  1000                           wreg	equ	0xFE8
  1001                           postdec1	equ	0xFE5
  1002                           plusw1	equ	0xFE3
  1003                           fsr1l	equ	0xFE1
  1004                           indf2	equ	0xFDF
  1005                           plusw2	equ	0xFDB
  1006                           fsr2h	equ	0xFDA
  1007                           fsr2l	equ	0xFD9
  1008                           status	equ	0xFD8
  1009                           
  1010 ;; *************** function _init_CLCD_config *****************
  1011 ;; Defined at:
  1012 ;;		line 3 in file "init_CLCD_config.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1026 ;;      Params:         0       0       0       0       0       0       0
  1027 ;;      Locals:         0       0       0       0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0       0       0
  1029 ;;      Totals:         0       0       0       0       0       0       0
  1030 ;;Total ram usage:        0 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; Hardware stack levels required when called:    2
  1033 ;; This function calls:
  1034 ;;		_delay
  1035 ;;		_write_lcd
  1036 ;; This function is called by:
  1037 ;;		_init_config
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           	psect	text8
  1042  002ED6                     __ptext8:
  1043                           	opt stack 0
  1044  002ED6                     _init_CLCD_config:
  1045                           	opt stack 27
  1046                           
  1047                           ;init_CLCD_config.c: 6: TRISD = 0;
  1048                           
  1049                           ;incstack = 0
  1050  002ED6  0E00               	movlw	0
  1051  002ED8  6E95               	movwf	3989,c	;volatile
  1052                           
  1053                           ;init_CLCD_config.c: 9: TRISC = 0;
  1054  002EDA  0E00               	movlw	0
  1055  002EDC  6E94               	movwf	3988,c	;volatile
  1056                           
  1057                           ;init_CLCD_config.c: 11: delay(250);
  1058  002EDE  0E00               	movlw	0
  1059  002EE0  6E02               	movwf	delay@time+1,c
  1060  002EE2  0EFA               	movlw	250
  1061  002EE4  6E01               	movwf	delay@time,c
  1062  002EE6  ECA8  F016         	call	_delay	;wreg free
  1063                           
  1064                           ;init_CLCD_config.c: 12: write_lcd(0x38, 0);;
  1065  002EEA  0E00               	movlw	0
  1066  002EEC  6E07               	movwf	write_lcd@mode,c
  1067  002EEE  0E38               	movlw	56
  1068  002EF0  EC81  F016         	call	_write_lcd
  1069                           
  1070                           ;init_CLCD_config.c: 14: delay(250);
  1071  002EF4  0E00               	movlw	0
  1072  002EF6  6E02               	movwf	delay@time+1,c
  1073  002EF8  0EFA               	movlw	250
  1074  002EFA  6E01               	movwf	delay@time,c
  1075  002EFC  ECA8  F016         	call	_delay	;wreg free
  1076                           
  1077                           ;init_CLCD_config.c: 15: write_lcd(0x0E, 0);;
  1078  002F00  0E00               	movlw	0
  1079  002F02  6E07               	movwf	write_lcd@mode,c
  1080  002F04  0E0E               	movlw	14
  1081  002F06  EC81  F016         	call	_write_lcd
  1082                           
  1083                           ;init_CLCD_config.c: 17: delay(5);
  1084  002F0A  0E00               	movlw	0
  1085  002F0C  6E02               	movwf	delay@time+1,c
  1086  002F0E  0E05               	movlw	5
  1087  002F10  6E01               	movwf	delay@time,c
  1088  002F12  ECA8  F016         	call	_delay	;wreg free
  1089                           
  1090                           ;init_CLCD_config.c: 18: write_lcd(0x01, 0);;
  1091  002F16  0E00               	movlw	0
  1092  002F18  6E07               	movwf	write_lcd@mode,c
  1093  002F1A  0E01               	movlw	1
  1094  002F1C  EC81  F016         	call	_write_lcd
  1095                           
  1096                           ;init_CLCD_config.c: 20: delay(5);
  1097  002F20  0E00               	movlw	0
  1098  002F22  6E02               	movwf	delay@time+1,c
  1099  002F24  0E05               	movlw	5
  1100  002F26  6E01               	movwf	delay@time,c
  1101  002F28  ECA8  F016         	call	_delay	;wreg free
  1102                           
  1103                           ;init_CLCD_config.c: 21: write_lcd(0x06, 0);;
  1104  002F2C  0E00               	movlw	0
  1105  002F2E  6E07               	movwf	write_lcd@mode,c
  1106  002F30  0E06               	movlw	6
  1107  002F32  EC81  F016         	call	_write_lcd
  1108  002F36  0012               	return		;funcret
  1109  002F38                     __end_of_init_CLCD_config:
  1110                           	opt stack 0
  1111                           tblptru	equ	0xFF8
  1112                           tblptrh	equ	0xFF7
  1113                           tblptrl	equ	0xFF6
  1114                           tablat	equ	0xFF5
  1115                           postinc0	equ	0xFEE
  1116                           wreg	equ	0xFE8
  1117                           postdec1	equ	0xFE5
  1118                           plusw1	equ	0xFE3
  1119                           fsr1l	equ	0xFE1
  1120                           indf2	equ	0xFDF
  1121                           plusw2	equ	0xFDB
  1122                           fsr2h	equ	0xFDA
  1123                           fsr2l	equ	0xFD9
  1124                           status	equ	0xFD8
  1125                           
  1126 ;; *************** function _write_lcd *****************
  1127 ;; Defined at:
  1128 ;;		line 3 in file "clcd.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;  data            1    wreg     unsigned char 
  1131 ;;  mode            1    6[COMRAM] unsigned char 
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  data            1    7[COMRAM] unsigned char 
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2, status,0, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1143 ;;      Params:         1       0       0       0       0       0       0
  1144 ;;      Locals:         1       0       0       0       0       0       0
  1145 ;;      Temps:          0       0       0       0       0       0       0
  1146 ;;      Totals:         2       0       0       0       0       0       0
  1147 ;;Total ram usage:        2 bytes
  1148 ;; Hardware stack levels used:    1
  1149 ;; Hardware stack levels required when called:    1
  1150 ;; This function calls:
  1151 ;;		_delay
  1152 ;; This function is called by:
  1153 ;;		_puts
  1154 ;;		_init_CLCD_config
  1155 ;;		_itoa_display
  1156 ;;		_putchar
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text9
  1161  002D02                     __ptext9:
  1162                           	opt stack 0
  1163  002D02                     _write_lcd:
  1164                           	opt stack 28
  1165                           
  1166                           ;incstack = 0
  1167                           ;write_lcd@data stored from wreg
  1168  002D02  6E08               	movwf	write_lcd@data,c
  1169                           
  1170                           ;clcd.c: 5: PORTD = data;
  1171  002D04  C008  FF83         	movff	write_lcd@data,3971	;volatile
  1172                           
  1173                           ;clcd.c: 6: PORTCbits.RC1 = mode;
  1174  002D08  B007               	btfsc	write_lcd@mode,0,c
  1175  002D0A  D002               	bra	u265
  1176  002D0C  9282               	bcf	3970,1,c	;volatile
  1177  002D0E  D001               	bra	u266
  1178  002D10                     u265:
  1179  002D10  8282               	bsf	3970,1,c	;volatile
  1180  002D12                     u266:
  1181                           
  1182                           ;clcd.c: 7: PORTCbits.RC0 = 0;
  1183  002D12  9082               	bcf	3970,0,c	;volatile
  1184                           
  1185                           ;clcd.c: 8: {PORTCbits.RC2 = 1; delay(1); PORTCbits.RC2 = 0;};
  1186  002D14  8482               	bsf	3970,2,c	;volatile
  1187  002D16  0E00               	movlw	0
  1188  002D18  6E02               	movwf	delay@time+1,c
  1189  002D1A  0E01               	movlw	1
  1190  002D1C  6E01               	movwf	delay@time,c
  1191  002D1E  ECA8  F016         	call	_delay	;wreg free
  1192  002D22  9482               	bcf	3970,2,c	;volatile
  1193  002D24  0012               	return		;funcret
  1194  002D26                     __end_of_write_lcd:
  1195                           	opt stack 0
  1196                           tblptru	equ	0xFF8
  1197                           tblptrh	equ	0xFF7
  1198                           tblptrl	equ	0xFF6
  1199                           tablat	equ	0xFF5
  1200                           postinc0	equ	0xFEE
  1201                           wreg	equ	0xFE8
  1202                           postdec1	equ	0xFE5
  1203                           plusw1	equ	0xFE3
  1204                           fsr1l	equ	0xFE1
  1205                           indf2	equ	0xFDF
  1206                           plusw2	equ	0xFDB
  1207                           fsr2h	equ	0xFDA
  1208                           fsr2l	equ	0xFD9
  1209                           status	equ	0xFD8
  1210                           
  1211 ;; *************** function _delay *****************
  1212 ;; Defined at:
  1213 ;;		line 3 in file "delay.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  time            2    0[COMRAM] unsigned int 
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;  j               2    4[COMRAM] unsigned int 
  1218 ;;  i               2    2[COMRAM] unsigned int 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1228 ;;      Params:         2       0       0       0       0       0       0
  1229 ;;      Locals:         4       0       0       0       0       0       0
  1230 ;;      Temps:          0       0       0       0       0       0       0
  1231 ;;      Totals:         6       0       0       0       0       0       0
  1232 ;;Total ram usage:        6 bytes
  1233 ;; Hardware stack levels used:    1
  1234 ;; This function calls:
  1235 ;;		Nothing
  1236 ;; This function is called by:
  1237 ;;		_write_lcd
  1238 ;;		_is_busy
  1239 ;;		_init_CLCD_config
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text10
  1244  002D50                     __ptext10:
  1245                           	opt stack 0
  1246  002D50                     _delay:
  1247                           	opt stack 28
  1248                           
  1249                           ;delay.c: 5: unsigned int i, j;
  1250                           ;delay.c: 7: for (i = 0; i < time; i++)
  1251                           
  1252                           ;incstack = 0
  1253  002D50  0E00               	movlw	0
  1254  002D52  6E04               	movwf	delay@i+1,c
  1255  002D54  0E00               	movlw	0
  1256  002D56  6E03               	movwf	delay@i,c
  1257  002D58  D00F               	goto	l912
  1258  002D5A                     l900:
  1259                           
  1260                           ;delay.c: 8: {
  1261                           ;delay.c: 9: for (j = 0; j < 135; j++)
  1262  002D5A  0E00               	movlw	0
  1263  002D5C  6E06               	movwf	delay@j+1,c
  1264  002D5E  0E00               	movlw	0
  1265  002D60  6E05               	movwf	delay@j,c
  1266  002D62                     l902:
  1267  002D62  5006               	movf	delay@j+1,w,c
  1268  002D64  E107               	bnz	l910
  1269  002D66  0E87               	movlw	135
  1270  002D68  5C05               	subwf	delay@j,w,c
  1271  002D6A  B0D8               	btfsc	status,0,c
  1272  002D6C  D003               	goto	l910
  1273                           
  1274                           ;delay.c: 10: {
  1275                           ;delay.c: 11: ;
  1276  002D6E  4A05               	infsnz	delay@j,f,c
  1277  002D70  2A06               	incf	delay@j+1,f,c
  1278  002D72  D7F7               	goto	l902
  1279  002D74                     l910:
  1280  002D74  4A03               	infsnz	delay@i,f,c
  1281  002D76  2A04               	incf	delay@i+1,f,c
  1282  002D78                     l912:
  1283  002D78  5001               	movf	delay@time,w,c
  1284  002D7A  5C03               	subwf	delay@i,w,c
  1285  002D7C  5002               	movf	delay@time+1,w,c
  1286  002D7E  5804               	subwfb	delay@i+1,w,c
  1287  002D80  B0D8               	btfsc	status,0,c
  1288  002D82  0012               	return	
  1289  002D84  D7EA               	goto	l900
  1290  002D86                     __end_of_delay:
  1291                           	opt stack 0
  1292                           tblptru	equ	0xFF8
  1293                           tblptrh	equ	0xFF7
  1294                           tblptrl	equ	0xFF6
  1295                           tablat	equ	0xFF5
  1296                           postinc0	equ	0xFEE
  1297                           wreg	equ	0xFE8
  1298                           postdec1	equ	0xFE5
  1299                           plusw1	equ	0xFE3
  1300                           fsr1l	equ	0xFE1
  1301                           indf2	equ	0xFDF
  1302                           plusw2	equ	0xFDB
  1303                           fsr2h	equ	0xFDA
  1304                           fsr2l	equ	0xFD9
  1305                           status	equ	0xFD8
  1306                           
  1307 ;; *************** function _init_ADC_config *****************
  1308 ;; Defined at:
  1309 ;;		line 3 in file "init_ADC_config.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;		None
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;		None
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  1    wreg      void 
  1316 ;; Registers used:
  1317 ;;		wreg, status,2
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1323 ;;      Params:         0       0       0       0       0       0       0
  1324 ;;      Locals:         0       0       0       0       0       0       0
  1325 ;;      Temps:          0       0       0       0       0       0       0
  1326 ;;      Totals:         0       0       0       0       0       0       0
  1327 ;;Total ram usage:        0 bytes
  1328 ;; Hardware stack levels used:    1
  1329 ;; This function calls:
  1330 ;;		Nothing
  1331 ;; This function is called by:
  1332 ;;		_init_config
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           	psect	text11
  1337  002CB2                     __ptext11:
  1338                           	opt stack 0
  1339  002CB2                     _init_ADC_config:
  1340                           	opt stack 29
  1341                           
  1342                           ;init_ADC_config.c: 6: AN4 = 1;
  1343                           
  1344                           ;incstack = 0
  1345  002CB2  8A80               	bsf	3968,5,c	;volatile
  1346                           
  1347                           ;init_ADC_config.c: 9: ADCON0 = 0x11;
  1348  002CB4  0E11               	movlw	17
  1349  002CB6  6EC2               	movwf	4034,c	;volatile
  1350                           
  1351                           ;init_ADC_config.c: 10: ADCON1 = 0x0A;
  1352  002CB8  0E0A               	movlw	10
  1353  002CBA  6EC1               	movwf	4033,c	;volatile
  1354                           
  1355                           ;init_ADC_config.c: 11: ADCON2 = 0x92;
  1356  002CBC  0E92               	movlw	146
  1357  002CBE  6EC0               	movwf	4032,c	;volatile
  1358  002CC0  0012               	return		;funcret
  1359  002CC2                     __end_of_init_ADC_config:
  1360                           	opt stack 0
  1361                           tblptru	equ	0xFF8
  1362                           tblptrh	equ	0xFF7
  1363                           tblptrl	equ	0xFF6
  1364                           tablat	equ	0xFF5
  1365                           postinc0	equ	0xFEE
  1366                           wreg	equ	0xFE8
  1367                           postdec1	equ	0xFE5
  1368                           plusw1	equ	0xFE3
  1369                           fsr1l	equ	0xFE1
  1370                           indf2	equ	0xFDF
  1371                           plusw2	equ	0xFDB
  1372                           fsr2h	equ	0xFDA
  1373                           fsr2l	equ	0xFD9
  1374                           status	equ	0xFD8
  1375                           
  1376 ;; *************** function _adc *****************
  1377 ;; Defined at:
  1378 ;;		line 3 in file "adc.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;		None
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;  data            2    4[COMRAM] unsigned short 
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  2    0[COMRAM] unsigned short 
  1385 ;; Registers used:
  1386 ;;		wreg, status,2
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1392 ;;      Params:         2       0       0       0       0       0       0
  1393 ;;      Locals:         2       0       0       0       0       0       0
  1394 ;;      Temps:          2       0       0       0       0       0       0
  1395 ;;      Totals:         6       0       0       0       0       0       0
  1396 ;;Total ram usage:        6 bytes
  1397 ;; Hardware stack levels used:    1
  1398 ;; This function calls:
  1399 ;;		Nothing
  1400 ;; This function is called by:
  1401 ;;		_main
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text12
  1406  002CE0                     __ptext12:
  1407                           	opt stack 0
  1408  002CE0                     _adc:
  1409                           	opt stack 30
  1410                           
  1411                           ;adc.c: 5: unsigned short data;
  1412                           ;adc.c: 8: ADCON0bits.GO = 1;
  1413                           
  1414                           ;incstack = 0
  1415  002CE0  82C2               	bsf	4034,1,c	;volatile
  1416  002CE2                     l109:
  1417  002CE2  B2C2               	btfsc	4034,1,c	;volatile
  1418  002CE4  D7FE               	goto	l109
  1419                           
  1420                           ;adc.c: 14: data = ADRESH;
  1421  002CE6  CFC4 F005          	movff	4036,adc@data	;volatile
  1422  002CEA  6A06               	clrf	adc@data+1,c
  1423                           
  1424                           ;adc.c: 15: data = (data << 8) | ADRESL;
  1425  002CEC  5005               	movf	adc@data,w,c
  1426  002CEE  6E03               	movwf	??_adc& (0+255),c
  1427  002CF0  50C3               	movf	4035,w,c	;volatile
  1428  002CF2  6E05               	movwf	adc@data,c
  1429  002CF4  C003  F006         	movff	??_adc,adc@data+1
  1430                           
  1431                           ;adc.c: 17: return data;
  1432  002CF8  C005  F001         	movff	adc@data,?_adc
  1433  002CFC  C006  F002         	movff	adc@data+1,?_adc+1
  1434  002D00  0012               	return	
  1435  002D02                     __end_of_adc:
  1436                           	opt stack 0
  1437  0000                     tblptru	equ	0xFF8
  1438                           tblptrh	equ	0xFF7
  1439                           tblptrl	equ	0xFF6
  1440                           tablat	equ	0xFF5
  1441                           postinc0	equ	0xFEE
  1442                           wreg	equ	0xFE8
  1443                           postdec1	equ	0xFE5
  1444                           plusw1	equ	0xFE3
  1445                           fsr1l	equ	0xFE1
  1446                           indf2	equ	0xFDF
  1447                           plusw2	equ	0xFDB
  1448                           fsr2h	equ	0xFDA
  1449                           fsr2l	equ	0xFD9
  1450                           status	equ	0xFD8
  1451                           tblptru	equ	0xFF8
  1452                           tblptrh	equ	0xFF7
  1453                           tblptrl	equ	0xFF6
  1454                           tablat	equ	0xFF5
  1455                           postinc0	equ	0xFEE
  1456                           wreg	equ	0xFE8
  1457                           postdec1	equ	0xFE5
  1458                           plusw1	equ	0xFE3
  1459                           fsr1l	equ	0xFE1
  1460                           indf2	equ	0xFDF
  1461                           plusw2	equ	0xFDB
  1462                           fsr2h	equ	0xFDA
  1463                           fsr2l	equ	0xFD9
  1464                           status	equ	0xFD8
  1465                           
  1466                           	psect	rparam
  1467  0000                     tblptru	equ	0xFF8
  1468                           tblptrh	equ	0xFF7
  1469                           tblptrl	equ	0xFF6
  1470                           tablat	equ	0xFF5
  1471                           postinc0	equ	0xFEE
  1472                           wreg	equ	0xFE8
  1473                           postdec1	equ	0xFE5
  1474                           plusw1	equ	0xFE3
  1475                           fsr1l	equ	0xFE1
  1476                           indf2	equ	0xFDF
  1477                           plusw2	equ	0xFDB
  1478                           fsr2h	equ	0xFDA
  1479                           fsr2l	equ	0xFD9
  1480                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      49
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    puts@ptr	PTR const unsigned char  size(2) Largest target is 14
		 -> main@message(COMRAM[14]), 


Critical Paths under _main in COMRAM

    _main->_itoa_display
    _puts->_write_lcd
    _itoa_display->_write_lcd
    _is_busy->_delay
    _init_CLCD_config->_write_lcd
    _write_lcd->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    6284
                                             17 COMRAM    16    16      0
                                _adc
                        _init_config
                       _itoa_display
                               _puts
                       _software_pwm
 ---------------------------------------------------------------------------------
 (1) _software_pwm                                         3     1      2      86
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _puts                                                 3     1      2    1767
                                              8 COMRAM     3     1      2
                            _is_busy
                          _write_lcd
 ---------------------------------------------------------------------------------
 (1) _itoa_display                                         9     7      2    2679
                                              8 COMRAM     9     7      2
                            ___lwdiv
                            ___lwmod
                            _is_busy
                          _write_lcd
 ---------------------------------------------------------------------------------
 (2) _is_busy                                              0     0      0     476
                              _delay
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     418
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    1636
                    _init_ADC_config
                   _init_CLCD_config
 ---------------------------------------------------------------------------------
 (2) _init_CLCD_config                                     0     0      0    1636
                              _delay
                          _write_lcd
 ---------------------------------------------------------------------------------
 (2) _write_lcd                                            2     1      1    1160
                                              6 COMRAM     2     1      1
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                6     4      2     476
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _init_ADC_config                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc                                                  6     4      2      46
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc
   _init_config
     _init_ADC_config
     _init_CLCD_config
       _delay
       _write_lcd
         _delay
   _itoa_display
     ___lwdiv
     ___lwmod
     _is_busy
       _delay
     _write_lcd
       _delay
   _puts
     _is_busy
       _delay
     _write_lcd
       _delay
   _software_pwm

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     21      31       1       51.6%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      31       3        0.0%
DATA                 0      0      31      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu Jan 30 17:33:19 2020

                       l16 2CC8                         l56 2F68                        l109 2CE2  
                      l515 2ECC                        _AN4 007C05                        l525 2E30  
                      l900 2D5A                        l910 2D74                        l902 2D62  
                      l912 2D78                        l960 2EA2                        l970 2EC2  
                      l962 2EA6                        l980 2E0E                        l958 2E9A  
                      l982 2E12                        l992 2DCE                        l986 2E26  
                      l978 2E06                        l998 2DE8                        u400 2D98  
                      u350 2F60                        u265 2D10                        u441 2E44  
                      u266 2D12                        u418 2D9A                        _adc 2CE0  
             _software_pwm 2D86                        wreg 000FE8              write_lcd@data 0008  
         software_pwm@data 0001              write_lcd@mode 0007                       ?_adc 0001  
                     l1010 2F80                       l1022 2FDA                       l1006 2F70  
                     l1018 2FC8                       l1060 2E5E                main@message 0012  
                     _main 2E3A                       fsr2h 000FDA                       fsr1l 000FE1  
                     indf2 000FDF                       fsr2l 000FD9                       _puts 2DBC  
                     start 0000               ___param_bank 000010                      ??_adc 0003  
                    ?_main 0001                      ?_puts 0009            __end_of___lwdiv 2ED6  
          __end_of___lwmod 2E3A               ?_init_config 0001                      _PORTD 000F83  
                    _TRISC 000F94                      _TRISD 000F95  __size_of_init_CLCD_config 0062  
                    _delay 2D50            __end_of_is_busy 2CE0                      tablat 000FF5  
                    plusw1 000FE3                      plusw2 000FDB                      status 000FD8  
          __initialization 2D26               __end_of_main 2E84               __end_of_puts 2DF8  
                   ??_main 0012                     ??_puts 000B              __activetblptr 000000  
            itoa_display@k 0010                     ?_delay 0001                     _ADCON0 000FC2  
                   _ADCON1 000FC1                     _ADCON2 000FC0                     _ADRESH 000FC4  
                   _ADRESL 000FC3                     _TRISB0 007C98               puts@location 000B  
                ??___lwdiv 0005                  ??___lwmod 0005                     delay@i 0003  
                   delay@j 0005                  ??_is_busy 0007               __pdataCOMRAM 0022  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
 __size_of_init_ADC_config 0010                 __accesstop 0060    __end_of__initialization 2D4A  
            ?_itoa_display 0009              ___rparam_used 000001             __pcstackCOMRAM 0001  
         itoa_display@data 0009              __end_of_delay 2D86           _init_CLCD_config 2ED6  
     __size_of_init_config 000C                    ??_delay 0003             ??_itoa_display 000B  
        ??_init_ADC_config 0001         __size_of_write_lcd 0024                    __Hparam 0000  
                  __Lparam 0000                    adc@data 0005                    ___lwdiv 2E84  
                  ___lwmod 2DF8                    __pcinit 2D26                    __ramtop 0600  
                  __ptext0 2E3A                    __ptext1 2D86                    __ptext2 2DBC  
                  __ptext3 2F38                    __ptext4 2CC2                    __ptext5 2DF8  
                  __ptext6 2E84                    __ptext7 2C98                    __ptext8 2ED6  
                  __ptext9 2D02               __size_of_adc 0022                    _is_busy 2CC2  
     end_of_initialization 2D4A                    postdec1 000FE5                    postinc0 000FEE  
                  puts@ptr 0009                 main@F15950 0022                  _PORTBbits 000F81  
                _PORTCbits 000F82                  _PORTDbits 000F83       __end_of_itoa_display 3000  
        __end_of_write_lcd 2D26                  _TRISDbits 000F95   __end_of_init_CLCD_config 2F38  
        itoa_display@array 000B              __pidataCOMRAM 2CA4              ?_software_pwm 0001  
      start_initialization 2D26                __end_of_adc 2D02              ??_init_config 0009  
           ??_software_pwm 0003                __pbssCOMRAM 0030            _init_ADC_config 2CB2  
         ___lwdiv@dividend 0001      __size_of_itoa_display 00C8                   ?___lwdiv 0001  
                 ?___lwmod 0001                   ?_is_busy 0001           ___lwdiv@quotient 0005  
           __size_of_delay 0036        __end_of_init_config 2CA4                  delay@time 0001  
             _itoa_display 2F38    __end_of_init_ADC_config 2CC2                 _ADCON0bits 000FC2  
   software_pwm@prog_cycle 0030                  _write_lcd 2D02                  copy_data0 2D3E  
     __end_of_software_pwm 2DBC                   __Hrparam 0000          ?_init_CLCD_config 0001  
                 __Lrparam 0000         ??_init_CLCD_config 0009           __size_of___lwdiv 0052  
         __size_of___lwmod 0042                _init_config 2C98           __size_of_is_busy 001E  
          ___lwdiv@divisor 0003            ___lwdiv@counter 0007                   __ptext10 2D50  
                 __ptext11 2CB2                   __ptext12 2CE0                 ?_write_lcd 0007  
            __size_of_main 004A              __size_of_puts 003C                   main@data 0020  
         ?_init_ADC_config 0001           ___lwmod@dividend 0001            ___lwmod@divisor 0003  
          ___lwmod@counter 0005                ??_write_lcd 0008      __size_of_software_pwm 0036  
